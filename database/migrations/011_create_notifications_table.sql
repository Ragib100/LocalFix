-- LocalFix Database Schema for Notifications
-- Save as: database/migrations/011_create_notifications_table.sql

CREATE TABLE notifications (
    notification_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id NUMBER NOT NULL,
    title VARCHAR2(200) NOT NULL,
    message CLOB NOT NULL,
    notification_type VARCHAR2(50) DEFAULT 'general' CHECK (notification_type IN ('general', 'job_update', 'application_update', 'payment', 'system')),
    is_read NUMBER(1) DEFAULT 0 CHECK (is_read IN (0, 1)),
    related_job_id NUMBER,
    related_application_id NUMBER,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    read_at TIMESTAMP,
    
    -- Foreign key constraints
    CONSTRAINT fk_notifications_user FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE,
    CONSTRAINT fk_notifications_job FOREIGN KEY (related_job_id) REFERENCES jobs(job_id) ON DELETE SET NULL,
    CONSTRAINT fk_notifications_application FOREIGN KEY (related_application_id) REFERENCES applications(application_id) ON DELETE SET NULL
);

-- Indexes
CREATE INDEX idx_notifications_user ON notifications(user_id);
CREATE INDEX idx_notifications_read ON notifications(is_read);
CREATE INDEX idx_notifications_type ON notifications(notification_type);
CREATE INDEX idx_notifications_created_at ON notifications(created_at);

-- Trigger to update read_at when notification is marked as read
CREATE OR REPLACE TRIGGER trg_notifications_read_at
    BEFORE UPDATE OF is_read ON notifications
    FOR EACH ROW
    WHEN (OLD.is_read = 0 AND NEW.is_read = 1)
BEGIN
    :NEW.read_at := CURRENT_TIMESTAMP;
END;

COMMIT;