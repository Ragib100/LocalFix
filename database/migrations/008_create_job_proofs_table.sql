-- LocalFix Database Schema for Job Proofs
-- Save as: database/migrations/008_create_job_proofs_table.sql

CREATE TABLE job_proofs (
    proof_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    job_id NUMBER NOT NULL,
    worker_id NUMBER NOT NULL,
    proof_photo VARCHAR2(500),
    proof_description CLOB NOT NULL,
    submitted_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    verified_by NUMBER,
    verified_at TIMESTAMP,
    verification_status VARCHAR2(20) DEFAULT 'pending' 
        CHECK (verification_status IN ('pending', 'approved', 'rejected')),
    admin_feedback CLOB,
    
    -- Foreign key constraints
    CONSTRAINT fk_proofs_job FOREIGN KEY (job_id) REFERENCES jobs(job_id) ON DELETE CASCADE,
    CONSTRAINT fk_proofs_worker FOREIGN KEY (worker_id) REFERENCES users(user_id) ON DELETE CASCADE,
    CONSTRAINT fk_proofs_admin FOREIGN KEY (verified_by) REFERENCES users(user_id) ON DELETE SET NULL,
    
    -- Ensure only one proof per job
    CONSTRAINT uk_proofs_job UNIQUE (job_id)
);

-- Indexes
-- (job_id already has a unique index from uk_proofs_job, so no extra index needed)
CREATE INDEX idx_proofs_worker ON job_proofs(worker_id);
CREATE INDEX idx_proofs_status ON job_proofs(verification_status);
CREATE INDEX idx_proofs_submitted_at ON job_proofs(submitted_at);

-- Trigger to update job status when proof is submitted
CREATE OR REPLACE TRIGGER trg_proof_submitted
    AFTER INSERT ON job_proofs
    FOR EACH ROW
BEGIN
    -- Update job status to 'completed' (assuming 4 = completed)
    UPDATE jobs 
    SET status_id = 4, updated_at = CURRENT_TIMESTAMP
    WHERE job_id = :NEW.job_id;
END;


-- Trigger to update job status when proof is verified
CREATE OR REPLACE TRIGGER trg_proof_verified
    AFTER UPDATE OF verification_status ON job_proofs
    FOR EACH ROW
    WHEN (NEW.verification_status = 'approved')
BEGIN
    -- Update job status to 'verified' (assuming 5 = verified)
    UPDATE jobs 
    SET status_id = 5, updated_at = CURRENT_TIMESTAMP
    WHERE job_id = :NEW.job_id;
END;


COMMIT;
